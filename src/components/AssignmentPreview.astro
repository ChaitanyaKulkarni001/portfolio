---
interface Props {
    title: string;
    img: string;
    img_alt?: string;
    description: string;
    slug: string; // Assuming you still want a slug for routing
}

const { title, img, img_alt, description, slug } = Astro.props;
---

<a class="card" >
    <span class="title">{title}</span>
    <img src={img} alt={img_alt || ''} loading="lazy" decoding="async" />
</a>
<p class="description">{description}</p>
<!-- <h1>Thi is a descriptopn </h1> -->


<style>
    .card {
        display: grid;
        grid-template: auto 1fr / auto 1fr;
        height: 20rem;
        background: var(--gradient-subtle);
        border: 1px solid var(--gray-800);
        border-radius: 0.75rem;
        /* overflow: hidden; */
        box-shadow: var(--shadow-sm);
        text-decoration: none;
        font-family: var(--font-brand);
        font-size: var(--text-lg);
        font-weight: 500;
        transition: box-shadow var(--theme-transition);
    }

    .card:hover {
        box-shadow: var(--shadow-md);
    }

    .title {
        grid-area: 1 / 1 / 2 / 2;
        z-index: 1;
        margin: 0.5rem;
        padding: 0.5rem 1rem;
        background: var(--gray-999);
        color: var(--gray-200);
        border-radius: 0.375rem;
    }

    img {
        grid-area: 1 / 1 / 3 / 3    ;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    /* .description {
        grid-area: 2 / 1 / 3 / 2;
        margin: 0.5rem;
        padding: 0.5rem 1rem;
        color: var(--gray-200);
    } */
    .description {
    font-size: 1.25rem; /* Adjust the size as needed */
    text-align: justify; /* Centers the text */
    margin: 0.5rem; /* Optional: Adjust margin as needed */
    color: var(--gray-200); /* Ensure the text color is appropriate */
}

    @media (min-width: 50em) {
        .card {
            height: 43rem;
            border-radius: 1.5rem;
        }

        .title {
            border-radius: 0.9375rem;
        }
    }
</style>
