---
import type { CollectionEntry } from 'astro:content';

interface Props {
	achievement: CollectionEntry<'honor'>;
}

const { data, slug } = Astro.props.achievement;
---

<a class="card" href={`/honor/${slug}`}>
	<span class="title">{data.title}</span>
	<img src={data.img} alt={data.img_alt || ''} loading="lazy" decoding="async" />
	<button class="clickhere">Click here</button>
</a>

<style>
	.card {
	display: grid;
	grid-template: auto 1fr / auto 1fr;
	position: relative;
	height: 11rem;
	background: var(--gradient-subtle);
	border: 1px solid var(--gray-800);
	border-radius: 0.75rem;
	overflow: hidden;
	box-shadow: var(--shadow-sm);
	text-decoration: none;
	font-family: var(--font-brand);
	font-size: var(--text-lg);
	font-weight: 500;
	transition: box-shadow var(--theme-transition);
	cursor: pointer;
}

.title {
	grid-area: 1 / 1 / 2 / 2;
	z-index: 1;
	margin: 0.5rem;
	padding: 0.5rem 1rem;
	background: var(--gray-999);
	color: var(--gray-200);
	border-radius: 0.375rem;
}

img {
	grid-area: 1 / 1 / 3 / 3;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

/* ðŸ”˜ Button styled directly */
.clickhere {
	position: absolute;
	bottom: 0.5rem;
	right: 0.5rem;
	padding: 10px 18px;
	border: unset;
	border-radius: 12px;
	color: #212121;
	background: #e8e8e8;
	font-weight: 600;
	font-size: 14px;
	box-shadow: 4px 8px 19px -3px rgba(0, 0, 0, 0.27);
	transition: all 250ms;
	overflow: hidden;
	z-index: 2;
}

.clickhere::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 0;
	border-radius: 12px;
	background-color: #212121;
	z-index: -1;
	transition: all 250ms;
}

.clickhere:hover {
	color: #e8e8e8;
}

.clickhere:hover::before {
	width: 100%;
}

@media (min-width: 50em) {
	.card {
		height: 22rem;
		border-radius: 1.5rem;
	}

	.title {
		border-radius: 0.9375rem;
	}
}
.card:hover .clickhere {
	color: #e8e8e8;
}

.card:hover .clickhere::before {
	width: 100%;
}

</style>
